module randora.engine.owned.events.input.keyboard.keypad_keys;

mixin template KeypadKeys(){
	import randora.engine.owned.events.input.keyboard.key_event;
	mixin(KeyEvent!("kp_0"));
	mixin(KeyEvent!("kp_00"));
	mixin(KeyEvent!("kp_000"));
	mixin(KeyEvent!("kp_1"));
	mixin(KeyEvent!("kp_2"));
	mixin(KeyEvent!("kp_3"));
	mixin(KeyEvent!("kp_4"));
	mixin(KeyEvent!("kp_5"));
	mixin(KeyEvent!("kp_6"));
	mixin(KeyEvent!("kp_7"));
	mixin(KeyEvent!("kp_8"));
	mixin(KeyEvent!("kp_9"));
	mixin(KeyEvent!("kp_a"));
	mixin(KeyEvent!("kp_ampersand"));
	mixin(KeyEvent!("kp_at"));
	mixin(KeyEvent!("kp_b"));
	mixin(KeyEvent!("kp_backspace"));
	mixin(KeyEvent!("kp_binary"));
	mixin(KeyEvent!("kp_c"));
	mixin(KeyEvent!("kp_clear"));
	mixin(KeyEvent!("kp_clearentry"));
	mixin(KeyEvent!("kp_colon"));
	mixin(KeyEvent!("kp_comma"));
	mixin(KeyEvent!("kp_d"));
	mixin(KeyEvent!("kp_dblampersand"));
	mixin(KeyEvent!("kp_dblverticalbar"));
	mixin(KeyEvent!("kp_decimal"));
	mixin(KeyEvent!("kp_divide"));
	mixin(KeyEvent!("kp_e"));
	mixin(KeyEvent!("kp_enter"));
	mixin(KeyEvent!("kp_equals"));
	mixin(KeyEvent!("kp_equals400"));
	mixin(KeyEvent!("kp_exclam"));
	mixin(KeyEvent!("kp_f"));
	mixin(KeyEvent!("kp_greater"));
	mixin(KeyEvent!("kp_hash"));
	mixin(KeyEvent!("kp_hexadecimal"));
	mixin(KeyEvent!("kp_leftbrace"));
	mixin(KeyEvent!("kp_leftparen"));
	mixin(KeyEvent!("kp_less"));
	mixin(KeyEvent!("kp_memadd"));
	mixin(KeyEvent!("kp_memclear"));
	mixin(KeyEvent!("kp_memdivide"));
	mixin(KeyEvent!("kp_memmultiply"));
	mixin(KeyEvent!("kp_memrecall"));
	mixin(KeyEvent!("kp_memstore"));
	mixin(KeyEvent!("kp_memsubtract"));
	mixin(KeyEvent!("kp_minus"));
	mixin(KeyEvent!("kp_multiply"));
	mixin(KeyEvent!("kp_octal"));
	mixin(KeyEvent!("kp_percent"));
	mixin(KeyEvent!("kp_period"));
	mixin(KeyEvent!("kp_plus"));
	mixin(KeyEvent!("kp_plusminus"));
	mixin(KeyEvent!("kp_power"));
	mixin(KeyEvent!("kp_rightbrace"));
	mixin(KeyEvent!("kp_rightparen"));
	mixin(KeyEvent!("kp_space"));
	mixin(KeyEvent!("kp_tab"));
	mixin(KeyEvent!("kp_verticalbar"));
	mixin(KeyEvent!("kp_xor"));
}
